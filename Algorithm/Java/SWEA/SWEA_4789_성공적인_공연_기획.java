/*
 * SWEA 4789번 - 성공적인 공연 기획 (D3)
 * 
 * 사람들은 공연이 끝난 후 모두 기립 박수를 할 생각이 있지만 기립 박수를 시작하는 타이밍은 사람마다 다를 수 있다.
 * 지금 기립 박수를 하고 있는 사람의 수가 특정한 수 이상이 되면 그제서야 일어나서 기립 박수를 하게 되는 것이다.
 * 이 특정한 수를 넘지 않으면 절대로 기립 박수를 하지 않는다.
 * 
 * 그렇기에 우선 아무런 조건이 없이 기립 박수를 하는 사람들이 기립 박수를 시작하고, 
 * 그것을 본 다른 사람들이 또 일어나서 연쇄적으로 기립 박수를 하게 된다.
 * 그리고 조건을 만족하지 못한 사람들은 부끄러움에 계속해서 앉아있게 된다.
 * 
 * 그래서 동욱이는 먼저 공연의 표를 예약한 사람들의 정보를 개개인에 대해 모두 조사하여, 
 * 각 사람들이 기립 박수를 하려면 최소 몇 명의 사람들이 기립 박수를 하고 있어야 하는지를 알게 되었다.
 * 
 * 각 사람들의 조건이 모두 다르기 때문에, 구성이 어떤 지에 따라 몇몇의 사람은 기립 박수를 하지 않을 수도 있다.
 * 그래서 몇 명의 사람들을 고용하여 공연이 끝난 후 기립 박수를 바로 하게 하여 
 * 실제로 표를 사서 공연을 관람한 사람들이 모두 기립 박수를 하도록 하게 하고 싶다.
 * 최소 몇 명의 사람들을 따로 고용해야 할까?
 * 
 * ‘0’에서 ‘9’사이의 문자 만으로 이루어진 문자열이 주어진다.
 * 첫 번째 글자: 기립 박수를 하고 있는 사람이 아무도 없을 때(0 명일 때) 기립 박수를 하는 사람의 수
 * i번째 글자: 기립 박수를 하고 있는 사람이 i-1명 이상일 때 기립 박수를 하는 사람의 수
 * 가장 마지막 문자는 ‘0’이 아니다. (적어도 한 명의 관객이 있음을 의미한다.)
 * 
 * 모든 관객이 기립 박수를 하게 하려면 최소 몇 명의 사람을 고용해야 하는지 출력한다.
 */

import java.util.Scanner;

public class SWEA_4789_성공적인_공연_기획 {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int T = sc.nextInt(); // 테스트 케이스

		for (int tc = 1; tc <= T; tc++) {
			String input = sc.next();
			int len = input.length();

			int sum = 0; // 현재 박수치는 사람 수
			int hire = 0; // 고용해야 할 사람 수

			for (int i = 0; i < len; i++) {
				// 다음 박수를 칠 사람의 수
				int num = Character.getNumericValue(input.charAt(i));

				// 현재 박수치는 사람의 수가 i명 이상이면 박수를 따라 친다.
				if (sum >= i) {
					sum += num;
				}
				// 아니라면 모자란 수만큼 사람을 고용한다.
				else {
					hire += i - sum;
					sum += (i - sum) + num;
				}
			}

			System.out.printf("#%d %d\n", tc, hire);
		}

		sc.close();
	}
}
